@page
@model CASPARWeb.Areas.Admin.Pages.Classrooms.UpsertModel
@{
}

<div class="card shadow border-0 mt-4 col-6 mx-auto">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-primary py-2">@(Model.objClassroom.Id != 0 ? "Update " : "Add ") Classroom</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form method="post" class="row">
            <div class="col-6">
                <input type="hidden" asp-for="objClassroom.Id">

                <div class="border p-3">
                    <label class="form-label">Building</label>
                    <select id="inputBuilding" asp-for="objClassroom.BuildingId" asp-items="@Model.BuildingList" class="form-select border-0 shadow">
                        <option disabled selected>--Select Building--</option>
                    </select>
                    <label class="form-label mt-4">Classroom Number</label>
                    <div class="form-group mt-1">
                        <input id="inputClassroomNumber" asp-for="objClassroom.ClassroomNumber" class="form-control border-0 shadow" />
                    </div>
                    <label class="form-label mt-4">Number of Seats</label>
                    <div class="form-group mt-1">
                        <input id="inputNumberOfSeats" asp-for="objClassroom.ClassroomSeats" class="form-control border-0 shadow" />
                    </div>
                    <label class="form-label mt-4">Classroom Details</label>
                    <div class="form-group mt-1">
                        <input id="inputClassroomDetails" asp-for="objClassroom.ClassroomDetail" class="form-control border-0 shadow" />
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="border p-3">
                    <p class="align-content-center">Amenities</p>
                @foreach (var amenity in Model.AttachedAmenityList) {
                    <div>
                            <input class="form-check-input" onchange="updateCheckbox()" type="checkbox" value="@amenity" checked />
                        <label>@amenity</label>
                    </div>
                }
                @foreach (var amenity in Model.UnattachedAmenityList) {
                    <div>
                            <input class="form-check-input" onchange="updateCheckbox()" type="checkbox" value="@amenity" />
                        <label>@amenity</label>
                    </div>
                }
                </div>
            </div>
                <div class="row pt-2 mt-3">
                    <div class="col-6">
                    <button onclick="return ValidateInput(event)" type="submit" class="btn btn-primary form-control">@(Model.objClassroom.Id != 0 ? "Update " : "Add ")</button>
                    </div>
                    <div class="col-6">
                        <a asp-page="./Index" class=" btn btn-outline-primary border form-control">
                            Back to Classrooms
                        </a>
                    </div>
                </div>
            <input type="hidden" id="amenityArrayInput" asp-for="returnedAttachedAmenity" value="" />
        </form>
    </div>
</div>
<script>
    function updateCheckbox() {
        //get all "checked" checkbox values
        var checkboxes = document.querySelectorAll('.form-check-input');
        var checkedValues = [];
        console.log("");

        //swal.fire('Error', 'TEST', 'error');
        // Loop through each checkbox
        checkboxes.forEach(function (checkbox) {
            if (checkbox.checked) {
                console.log(checkbox.value);
                checkedValues.push(checkbox.value);
            }
        });
        console.log("Checked Boxes: " + checkedValues.length);
        //generate the comma separated return list
        var returnList = "";
        for (var i = 0; i < checkedValues.length; i++) {
            returnList = returnList + checkedValues[i];
            if (i < checkedValues.length - 1) {
                returnList = returnList + ",";
            }
        }
        document.getElementById('amenityArrayInput').value = returnList;
        //if the list is empty set the return string to '_'
        if (checkedValues.length == 0) {
            document.getElementById('amenityArrayInput').value = "_";
        }
        console.log("Return string: " + document.getElementById('amenityArrayInput').value);
    }

    function ValidateInput(event) {
        if (document.getElementById('inputBuilding').value == "--Select Building--") {
            swal.fire('Error', 'Please Select a Building', 'error');
            return false;
        }
        else if (document.getElementById('inputClassroomNumber').value == "") {

            swal.fire('Error', 'Please enter a Classroom Number', 'error');
            return false;
        }
        else if (document.getElementById('inputNumberOfSeats').value < 0) {

            swal.fire('Error', 'Please enter a Valid Number of Seats', 'error');
            return false;
        }
        else if (document.getElementById('inputClassroomDetails').value == "") {

            swal.fire('Error', 'Please enter Classroom Details', 'error');
            return false;
        }
        updateCheckbox();
        return true;

    }
</script>